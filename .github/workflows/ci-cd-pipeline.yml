name: CI / CD Pipeline
run-name: ${{ github.actor }} is Deploying 

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event_name == 'push' && github.ref_type == 'tag' && github.ref_name || github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Vote app
        uses: docker/build-push-action@v6
        with:
          context: ./vote
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vote:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/vote:latest
            
      - name: Build and push Result app
        uses: docker/build-push-action@v6
        with:
          context: ./result
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/result:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/result:latest

      - name: Build and push Worker app
        uses: docker/build-push-action@v6
        with:
          context: ./worker
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/worker:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/worker:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}
      
      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic db-credentials \
            --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -
            
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/

      - name: Restart Deployments to Pull Latest Image 
        run: |
          kubectl rollout restart deployment/result-deployment -n default
          kubectl rollout restart deployment/vote-deployment -n default
          kubectl rollout restart deployment/worker-deployment -n default
